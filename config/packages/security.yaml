# security:
#     # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
#     providers:
#         users_in_memory: { memory: null }
#     firewalls:
#         dev:
#             pattern: ^/(_(profiler|wdt)|css|images|js)/
#             security: false
#         main:
#             anonymous: true
#             lazy: true
#             provider: users_in_memory
#             guard:
#                 authenticators:
#                     - App\Security\EmployeAuthenticator
#             logout:
#                 path: app_logout
#                 # where to redirect after logout
#                 # target: app_any_route

#             # activate different ways to authenticate
#             # https://symfony.com/doc/current/security.html#firewalls-authentication

#             # https://symfony.com/doc/current/security/impersonating_user.html
#             # switch_user: true

#     # Easy way to control access for large sections of your site
#     # Note: Only the *first* access control that matches will be used
#     access_control:
#         # - { path: ^/admin, roles: ROLE_ADMIN }
#         # - { path: ^/profile, roles: ROLE_USER }

security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            pattern: ^/admin
            anonymous: true
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\EmployeAuthenticator
            logout:
                path: app_admin_logout
                target: app_admin_login
        main:
            anonymous: true
            lazy: true
            # access_denied_handler: App\Security\AccessDeniedHandler
            # entry_point: entry_point.user_login
            # provider: app_user_provider
            # guard:
            #     authenticators:
            #         - App\Security\UserAuthenticator
            # logout:
            #     path: app_logout
            #     target: app_admin_login
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/admin, roles: [IS_AUTHENTICATED_FULLY,ROLE_USER] }
        # - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY } 
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN]